/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    kotlin("jvm") version "1.5.10"
    kotlin("plugin.serialization") version "1.5.10"

    // Apply the java-library plugin for API and implementation separation. Provides "implementation" configuration
    `java-library`
    // Required to create a plugin
    `java-gradle-plugin`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // This is required to add plugins as dependencies
    gradlePluginPortal()
}

val kotlinVersion: String by project

dependencies {
    compileOnly(gradleApi())

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:$kotlinVersion")) {
        description = "align versions of all Kotlin components"
    }
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion") {
        description = "Use JDK 8 version standard lib"
    }
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion") {
        description = "Reflection for kotlin"
    }
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0") {
        description = "Coroutines for kotlin"
    }

    // These dependencies will allow this custom plugin to automatically be applied to projects which use it
    runtimeOnly("org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:$kotlinVersion") {
        description = "Provides this plugin to our custom plugin, so that it is automatically applied"
    }
    runtimeOnly("org.jetbrains.kotlin.kapt:org.jetbrains.kotlin.kapt.gradle.plugin:$kotlinVersion") {
        description = "Provides kapt annotations for projects"
    }

    testImplementation("io.kotest:kotest-runner-junit5:4.5.0")
    testImplementation("io.kotest:kotest-assertions-core:4.5.0")
}

// Configure the plugin
gradlePlugin {
    plugins {
        create("common-kotlin-lib") {
            id = "app.khadga.common.kotlin.lib"
            implementationClass = "app.khadga.decipher.KotlinLibrary"
        }
    }
}

java {
    modularity.inferModulePath.set(true)
}

tasks.withType<Test> {
    useJUnitPlatform()
}